@import url(common.css);
@import url(_reset.css);
@import url(_variables.css);
@import url(hamburger-overlay-2.css);


.main-grid { 
    display: grid;
    margin-bottom: 5rem;
    margin-left: 3rem;
    grid-gap: 3rem;
    grid-template-columns: 2fr 1fr;
    grid-template-rows: auto;
    grid-template-areas: 
        "main-content sidebar"

}

.main-content { grid-area: main-content }
.sidebar     { grid-area: sidebar }

.main-content {
    display: flex;
    flex-direction: column;
    margin-top: 3rem;
}

.main-content p, li, h5 {
    margin: 0 2rem 1rem 0;
}

.reduce-margin {
    margin-top: -1em;
}

/* Overlay 2 */

.hamburger-overlay-2,   /* I got feedback on my last assignment that using the same ID to toggle both overlay layouts was not valid HTML */
label[for="menuToggle2"] {  /* Even though i stated that i only did it that way for visual demonstration purposes, because JS was not available - and i understood it was not valid HTML */
    display: none;            /* So now i am now using this repetitive and convoluted solution to toggle the two different overlays instead */
} 

@media (max-width: 665px) {

    .main-grid { 
        display: grid;
        margin-bottom: 5rem;
        margin-left: 1rem;
        margin-right: 1rem;
        grid-gap: 3rem;
        grid-template-columns: auto;
        grid-template-rows: auto;
        grid-template-areas: 
            "main-content"
    }

    .main-content,
    .title-bar {
        align-items: center;
        text-align: center;
    }

    .title-bar h3 {
        margin: 0 1rem 0 1rem;
        font-size: 3rem;
    }

    .bpHide-3 {
        display: none;
    }

    label[for="menuToggle"] {
        display: none; 
    }
    label[for="menuToggle2"] {
        display: block; 
    }

    .hamburger-overlay-2 {
        display: block;
        width: 100%;
    }

}